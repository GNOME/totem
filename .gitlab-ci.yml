include: 'https://gitlab.gnome.org/GNOME/citemplates/raw/master/flatpak/flatpak_ci_initiative.yml'

stages:
- test
- deploy

variables:
    # Replace with your preferred file name of the resulting Flatpak bundle
    BUNDLE: "org.gnome.Totem.Devel.flatpak"
    GIT_SUBMODULE_STRATEGY: normal
    FEDORA_DEPS:
      redhat-rpm-config
      meson
      git
      cairo-devel
      desktop-file-utils
      clutter-devel
      clutter-gst3-devel
      clutter-gtk-devel
      gcc-c++
      gettext
      gnome-desktop3-devel
      grilo-devel
      gsettings-desktop-schemas-devel
      gstreamer1-devel
      gstreamer1-plugins-base-devel
      gstreamer1-plugins-good
      gtk3-devel
      gtk-doc
      itstool
      libappstream-glib
      liberation-sans-fonts
      libpeas-devel
      pygobject3-devel
      python3-typed_ast
      pylint
      python3-devel
      totem-pl-parser-devel
      flatpak-builder
      xorg-x11-server-Xvfb

build-fedora:
  image: fedora:latest
  stage: test
  before_script:
    - dnf install -y $FEDORA_DEPS
    # See https://bugzilla.redhat.com/show_bug.cgi?id=1896438
    - dnf remove -y pylint
  script:
    - meson _build
    - G_MESSAGES_DEBUG=all xvfb-run -a -s "-screen 0 1024x768x24" ninja -C _build test
    - ninja -C _build install
    - G_MESSAGES_DEBUG=all xvfb-run -a -s "-screen 0 1024x768x24" ninja -C _build dist

flatpak:master:
    extends: .flatpak
    image: registry.gitlab.gnome.org/gnome/gnome-runtime-images/gnome:master
    stage: test
    variables:
        # Replace with your manifest path
        MANIFEST_PATH: "flatpak/org.gnome.Totem.Devel.json"
        RUNTIME_REPO: "https://nightly.gnome.org/gnome-nightly.flatpakrepo"
        # Replace with your application name, as written in the manifest
        FLATPAK_MODULE: "totem"
        APP_ID: "org.gnome.Totem.Devel"

nightly:
  needs: ['flatpak:master']
  dependencies: ['flatpak:master']
  extends: '.publish_nightly'

flathub beta:
  image: 'registry.gitlab.gnome.org/gnome/gnome-runtime-images/flat-manager-client'
  stage: 'deploy'
  # FIXME: This needs to depend on a app build against a stable runtime if its
  # going to be on flathub-beta
  needs: ['flatpak:master']
  dependencies: ['flatpak:master']
  script:
    - tar xf repo.tar
    - export REPO_TOKEN=$FLATHUB_BETA_TOKEN
    - flatpak build-update-repo --generate-static-deltas repo/
    - BUILD_ID=$(flat-manager-client create ${FLAT_MANAGER_URL} ${FLATPAK_REPO})
    - flat-manager-client push --commit --publish --wait ${BUILD_ID} repo/ || result=$?
    - flat-manager-client purge ${BUILD_ID}
    - exit $result
  variables:
    FLAT_MANAGER_URL: 'https://hub.flathub.org'
    FLATPAK_REPO: 'beta'
  only:
    refs:
      - 'master'
      # FIXME: remove once done testing
      - 'alatiera/flathub-beta'
    variables:
      - $FLATHUB_BETA_TOKEN
